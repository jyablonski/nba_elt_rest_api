services:
  redis:
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - api_network
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ${PWD}/docker/postgres_bootstrap.sql:/docker-entrypoint-initdb.d/z99_dump.sql
    networks:
      - api_network

  rest_api:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    image: nba_elt_rest_api_local
    environment:
      - IP=postgres
      - RDS_USER=postgres
      - RDS_PW=postgres
      - RDS_DB=postgres
      - RDS_SCHEMA=nba_prod
      - ENV_TYPE=docker_dev
      - API_KEY=bkmSqgcZMzR1JS3ek8gdNGyOrVefyVkK!
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=bababooiee
      - OTEL_SERVICE_NAME=rest-api-dev
      - GMAIL_OAUTH_ID=aaaa
      - GMAIL_OAUTH_CLIENT_SECRET=bbbb
      - GMAIL_OAUTH_REDIRECT_URL=http://localhost:8080/auth_google
      - OS_ENDPOINT=http://opensearch:9200
      - REDIS_HOST=redis
      - REDIS_PW=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    restart: on-failure
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - api_network
    links:
      - postgres:postgres
    volumes:
      - ${PWD}/src/:/home/appuser/src
      - ${PWD}/static/:/home/appuser/static
      - ${PWD}/templates:/home/appuser/templates
      - ${PWD}/config.yaml:/home/appuser/config.yaml
      # these are for fast local docker compose dev so changes will automatically make it into the app

  # Dashboard for Redis to view Keys + TTL etc
  # :latest didnt work for some dumbass reason, so using 1.14
  # redis_dashboard:
  #   image: redislabs/redisinsight:1.14.0
  #   ports:
  #     - 8001:8001
  #   networks:
  #     - api_network

  # 2024-03-13 update this shit fkn blows, so many fucking things to tweak for 0 reason
  # https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/
  # opensearch:
  #   image: opensearchproject/opensearch:latest
  #   container_name: opensearch
  #   environment:
  #     - discovery.type=single-node
  #     - plugins.security.disabled=true
  #     - cluster.routing.allocation.disk.threshold_enabled=false
  #     - OPENSEARCH_INITIAL_ADMIN_PASSWORD=bkmSqgcZMzR1JS3ek8gdNGyOrVefyVkK!
  #   ports:
  #     - 9200:9200 # Opensearch API
  #     - 9600:9600 # Performance Analyzer
  #   networks:
  #     - api_network

  # opensearch-dashboards:
  #   image: opensearchproject/opensearch-dashboards:latest
  #   container_name: opensearch-dashboards
  #   ports:
  #     - 5601:5601
  #   expose:
  #     - "5601"
  #   environment:
  #     OPENSEARCH_HOSTS: '["http://opensearch:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
  #     DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
  #   networks:
  #     - api_network
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - 9090:9090
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   volumes:
  #     - .././prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - api_network

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   # volumes:
  #   #   - grafana_data:/var/lib/grafana
  #   networks:
  #     - api_network

# volumes:
#   grafana_data:

networks:
  api_network:
